name: Cargo

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

jobs:
  build:
    name: Build & Test
    strategy:
      matrix:
        os: ['ubuntu-latest']
    runs-on: ${{ matrix.os }}
    steps:
      - name: Update dependencies
        run: sudo apt-get update
      - name: Install dependencies
        run: sudo apt-get install -y pkg-config libudev-dev
      - uses: actions/checkout@v2
      - name: Configure build cache
        uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: cargo-${{ matrix.os }}-${{ hashFiles('**/Cargo.lock') }}
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
      - name: Build
        run: cargo build --verbose
        env:
          RUSTFLAGS: -D warnings
      - name: Run tests
        run: cargo test --all --verbose

  docs:
    name: Docs
    runs-on: ubuntu-latest
    steps:
      - name: Update dependencies
        run: sudo apt-get update
      - name: Install dependencies
        run: sudo apt-get install -y pkg-config libudev-dev
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
      - name: Docs
        run: cargo doc --all
        env:
          RUSTDOCFLAGS: -D warnings

  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - name: Update dependencies
        run: sudo apt-get update
      - name: Install dependencies
        run: sudo apt-get install -y pkg-config libudev-dev
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          components: clippy, rustfmt
      - name: Cache cargo registry
        uses: actions/cache@v1
        with:
          path: ~/.cargo/registry
          key: cargo-${{ runner.os }}-${{ hashFiles('**/Cargo.lock') }}
      - name: Run clippy
        uses: actions-rs/cargo@v1
        with:
          command: clippy
          args: --all --tests
        env:
          RUSTFLAGS: -D warnings
      - name: Check formating
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all -- --check
